"""
This type stub file was generated by pyright.
"""

from pyinfra.api import operation
from typing import Any, Optional

'''
Execute commands and up/download files *from* the remote host.

Eg: ``pyinfra -> inventory-host.net <-> another-host.net``
'''
@operation
def keyscan(state, host, hostname, force: bool = ...):
    '''
    Check/add hosts to the ``~/.ssh/known_hosts`` file.

    + hostname: hostname that should have a key in ``known_hosts``
    + force: if the key already exists, remove and rescan

    Example:

    .. code:: python

        ssh.keyscan(
            {'Set add server two to known_hosts on one'},
            'two.example.com',
        )

    '''
    ...

@operation
def command(state, host, hostname, command, ssh_user: Optional[Any] = ...):
    '''
    Execute commands on other servers over SSH.

    + hostname: the hostname to connect to
    + command: the command to execute
    + ssh_user: connect with this user

    Example:

    .. code:: python

        ssh.command(
            {'Create file by running echo from host one to host two'},
            'two.example.com',
            'echo "one was here" > /tmp/one.txt',
            ssh_user='vagrant',
        )

    '''
    ...

@operation
def upload(state, host, hostname, filename, remote_filename: Optional[Any] = ..., use_remote_sudo: bool = ..., ssh_keyscan: bool = ..., ssh_user: Optional[Any] = ...):
    '''
    Upload files to other servers using ``scp``.

    + hostname: hostname to upload to
    + filename: file to upload
    + remote_filename: where to upload the file to (defaults to ``filename``)
    + use_remote_sudo: upload to a temporary location and move using sudo
    + ssh_keyscan: execute ``ssh.keyscan`` before uploading the file
    + ssh_user: connect with this user
    '''
    ...

@operation
def download(state, host, hostname, filename, local_filename: Optional[Any] = ..., force: bool = ..., ssh_keyscan: bool = ..., ssh_user: Optional[Any] = ...):
    '''
    Download files from other servers using ``scp``.

    + hostname: hostname to upload to
    + filename: file to download
    + local_filename: where to download the file to (defaults to ``filename``)
    + force: always download the file, even if present locally
    + ssh_keyscan: execute ``ssh.keyscan`` before uploading the file
    + ssh_user: connect with this user
    '''
    ...

